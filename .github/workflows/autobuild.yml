name: windows-x64

on: 
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-windows-x64:
    runs-on: windows-latest
    steps:
      - name: Setup Windows 10 SDK version 10.0.26100.0
        uses: GuillaumeFalourd/setup-windows10-sdk-action@v2.2
        with:
          sdk-version: 26100
      - name: Checkout sources
        run: |
          git clone https://github.com/Eblo/angle .
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: build
          key: ${{ runner.os }}-build-${{ hashFiles('src/**/*', 'CMakeLists.txt') }}
    
      - name: Cache output artifacts
        uses: actions/cache@v4
        with:
          path: out
          key: ${{ runner.os }}-out-${{ hashFiles('src/**/*') }}
      - name: Build
        shell: cmd
        run: |
          set PATH=%cd%\depot_tools;%PATH%
          set DEPOT_TOOLS_WIN_TOOLCHAIN=0
          set WINDOWSSDKDIR=C:\Program Files (x86)\Windows Kits\10
          cmd /c gclient
          cmd /c python scripts/bootstrap.py
          cmd /c gclient sync
          cmd /c gn gen out/Release --args="is_debug=false"
          cmd /c autoninja -C out/Release
      - name: Pack
        shell: bash
        run: |
          mkdir windows-x64
          ls out/Release
          mv -f out/Release/libEGL.dll windows-x64/
          mv -f out/Release/libGLESv2.dll windows-x64/
          mv -f out/Release/vk_swiftshader.dll windows-x64/
          mv -f out/Release/vk_swiftshader_icd.json windows-x64/
          mv -f out/Release/vulkan-1.dll windows-x64/
          mv -f LICENSE windows-x64/
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-x64
          path: windows-x64

  build-linux-x64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        run: |
          git clone https://github.com/Eblo/angle .
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: build
          key: ${{ runner.os }}-build-${{ hashFiles('src/**/*', 'CMakeLists.txt') }}
      
      - name: Cache output artifacts
        uses: actions/cache@v4
        with:
          path: out
          key: ${{ runner.os }}-out-${{ hashFiles('src/**/*') }}
      - name: Build
        run: |
          export PATH="$(pwd)/depot_tools:$PATH"
          gclient
          python scripts/bootstrap.py
          gclient sync
          ./build/install-build-deps.sh
          gn gen out/Release --args="is_debug=false is_android=false"
          autoninja -C out/Release
      - name: Pack
        run: |
          mkdir linux-x64
          ls out/Release
          mv -f out/Release/libEGL.so linux-x64/
          mv -f out/Release/libGLESv2.so linux-x64/
          mv -f out/Release/vk_swiftshader.so linux-x64/
          mv -f out/Release/vk_swiftshader_icd.json linux-x64/
          mv -f out/Release/vulkan-1.so linux-x64/
          mv -f LICENSE linux-x64/
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-x64
          path: linux-x64

  build-macos-x64:
    runs-on: macos-15
    steps:
      - name: Checkout sources
        run: |
          git clone https://github.com/Eblo/angle .
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: build
          key: ${{ runner.os }}-build-${{ hashFiles('src/**/*', 'CMakeLists.txt') }}
      
      - name: Cache output artifacts
        uses: actions/cache@v4
        with:
          path: out
          key: ${{ runner.os }}-out-${{ hashFiles('src/**/*') }}
      - name: Build
        run: |
          export PATH="$(pwd)/depot_tools:$PATH"
          gclient
          python scripts/bootstrap.py
          gclient sync
          gn gen out/Release --args="is_debug=false"
          autoninja -C out/Release
      - name: Pack
        run: |
          mkdir macos-x64
          mv -f out/Release/libEGL.dylib macos-x64/
          mv -f out/Release/libGLESv2.dylib macos-x64/
          mv -f out/Release/libvk_swiftshader.dylib macos-x64/
          mv -f out/Release/vk_swiftshader_icd.json macos-x64/
          mv -f LICENSE macos-x64/
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-x64
          path: macos-x64